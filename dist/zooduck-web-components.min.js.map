{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","zooduck-carousel/zooduck-carousel.style.ts","zooduck-carousel/prototype/Number/to-positive.ts","utils/is-tap.ts","utils/pointer-event-details.ts","utils/wait.ts","utils/index.ts","zooduck-carousel/zooduck-carousel.component.ts","zooduck-input/icons/index.ts","zooduck-input/zooduck-input-utils.ts","zooduck-input/zooduck-input.style.ts","zooduck-input/zooduck-input.global-style.ts","zooduck-input/zooduck-input.component..ts","zooduck-radio/zooduck-radio.component.ts","zooduck-terminal/zooduck-terminal.style.ts","zooduck-terminal/zooduck-terminal.component.ts","index.ts"],"names":[],"mappings":"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","file":"zooduck-web-components.min.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","interface Options {\r\n    transitionSpeed: number;\r\n}\r\n\r\nexport const style = (options: Options): string => {\r\n    const { transitionSpeed: transitionSpeedInMillis } = options;\r\n    return `\r\n        :host {\r\n            position: relative;\r\n            display: block;\r\n            visibility: hidden;\r\n            overflow: hidden;\r\n            touch-action: pan-y;\r\n            cursor: pointer;\r\n            user-select: none;\r\n            transition: height ${transitionSpeedInMillis}ms;\r\n        }\r\n        :host(.--ready) {\r\n            visibility: visible;\r\n        }\r\n        ::slotted([slot=slides]) {\r\n            display: flex;\r\n            align-items: flex-start;\r\n            justify-content: left;\r\n        }\r\n        ::slotted([slot=slides]) {\r\n            transition: all ${transitionSpeedInMillis}ms;\r\n        }\r\n        :host(.--touch-active) ::slotted([slot=slides]) {\r\n            transition: none;\r\n        }\r\n        :host(.--no-animate) ::slotted([slot=slides]) {\r\n            transition: none;\r\n        }\r\n    `;\r\n};\r\n","Number.prototype.toPositive = function (): number {\r\n    return this < 0 ? (this * -1) : this;\r\n};\r\n","interface EventDetail {\r\n    event: PointerEvent|MouseEvent|TouchEvent,\r\n    clientX: number;\r\n    clientY: number;\r\n    timeStamp: number;\r\n}\r\n\r\nexport const isTap = (lastPointerdownEvent: EventDetail, pointerupEvent: EventDetail): boolean => {\r\n    const maxInterval = 250;\r\n    const maxDistance = 10;\r\n    const distance = (lastPointerdownEvent.clientX - pointerupEvent.clientX);\r\n    const positiveDistance = distance < 0 ? (distance * -1) : distance;\r\n\r\n    if (positiveDistance > maxDistance) {\r\n        return false;\r\n    }\r\n\r\n    return (pointerupEvent.timeStamp - lastPointerdownEvent.timeStamp) < maxInterval;\r\n};\r\n","export interface EventDetails {\r\n    event: PointerEvent|MouseEvent|TouchEvent,\r\n    clientX: number;\r\n    clientY: number;\r\n    timeStamp: number;\r\n}\r\n\r\nexport class PointerEventDetails {\r\n    public fromMouse(e: MouseEvent): EventDetails {\r\n        const { clientX, clientY, timeStamp } = e;\r\n        const pointerEventDetails = {\r\n            event: e,\r\n            clientX,\r\n            clientY,\r\n            timeStamp,\r\n        };\r\n\r\n        return pointerEventDetails;\r\n    }\r\n\r\n    public fromPointer(e: PointerEvent): EventDetails  {\r\n        const { clientX, clientY, timeStamp } = e;\r\n        const pointerEventDetails = {\r\n            event: e,\r\n            clientX,\r\n            clientY,\r\n            timeStamp,\r\n        };\r\n\r\n        return pointerEventDetails;\r\n    }\r\n\r\n    public fromTouch(e: TouchEvent): EventDetails {\r\n        const { clientX, clientY } = e.changedTouches[0];\r\n        const { timeStamp } = e;\r\n        const pointerEventDetails = {\r\n            event: e,\r\n            clientX,\r\n            clientY,\r\n            timeStamp,\r\n        };\r\n\r\n        return pointerEventDetails;\r\n    }\r\n}\r\n","export const wait = (delayInMillis = 0): Promise<void> => {\r\n    return new Promise(res => setTimeout(res, delayInMillis));\r\n};\r\n","import { isTap } from './is-tap';\r\nimport { PointerEventDetails, EventDetails } from './pointer-event-details';\r\nimport { wait } from './wait';\r\n\r\nexport {\r\n    isTap,\r\n    PointerEventDetails,\r\n    EventDetails,\r\n    wait,\r\n};\r\n","import { style } from './zooduck-carousel.style';\r\nimport  './prototype/Number/to-positive';\r\nimport { wait, PointerEventDetails, EventDetails } from '../utils/index'; // eslint-disable-line no-unused-vars\r\n\r\ninterface Slide {\r\n    id: number;\r\n    index: number;\r\n    el: HTMLElement;\r\n}\r\n\r\ninterface TouchStartData {\r\n    timeStamp: number;\r\n    clientX: number;\r\n    clientY: number;\r\n}\r\n\r\ninterface TouchMoveData {\r\n    initialDirection: 'vertical'|'horizontal';\r\n    distanceX: number;\r\n    distanceY: number;\r\n}\r\n\r\ninterface PointerEvents {\r\n    pointerdown: EventDetails[];\r\n}\r\n\r\ntype Loading = 'eager'|'lazy';\r\n\r\nconst tagName = 'zooduck-carousel';\r\nconst requiredSlotMissingError = (slotName: string) => {\r\n    return `\r\n${tagName} failed to render. No slotted content for \"${slotName}\" was found.\r\n-----------------------------------\r\nSlotted content can be added like:\r\n-----------------------------------\r\n<${tagName}>\r\n    <div slot=\"slides\">\r\n        <div>SLIDE_ONE_CONTENT</div>\r\n        <div>SLIDE_TWO_CONTENT</div>\r\n        ...\r\n    </div>\r\n<\\\\${tagName}>\r\n-----------------------------------\r\n    `.trim();\r\n};\r\n\r\nexport class HTMLZooduckCarouselElement extends HTMLElement {\r\n    private _container: HTMLElement;\r\n    private _currentOffsetX: number;\r\n    private _currentslide: string;\r\n    private _currentSlide: Slide;\r\n    private _imageIntersectionObserver: IntersectionObserver;\r\n    private _imagesToLoad: HTMLImageElement[];\r\n    private _loading: Loading;\r\n    private _maxOffsetX: number;\r\n    private _minPixelsMovementRequiredToRegisterMove: number;\r\n    private _pointerEventDetails: PointerEventDetails;\r\n    private _pointerEvents: PointerEvents;\r\n    private _slides: Slide[];\r\n    private _slideSelectors: HTMLElement;\r\n    private _touchActive: boolean;\r\n    private _touchMoveData: TouchMoveData;\r\n    private _touchMoveInProgress: boolean;\r\n    private _touchStartData: TouchStartData;\r\n    private _transitionSpeedInMillis: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._currentOffsetX = 0;\r\n        this._currentslide = '1';\r\n        this._minPixelsMovementRequiredToRegisterMove = 10;\r\n        this._imageIntersectionObserver = new IntersectionObserver(this._imageIntersectionObserverCallback, {\r\n            root: null,\r\n            threshold: [.1],\r\n        });\r\n        this._imagesToLoad = [];\r\n        this._loading = 'lazy';\r\n        this._maxOffsetX = 0;\r\n        this._pointerEventDetails = new PointerEventDetails();\r\n        this._pointerEvents = {\r\n            pointerdown: [],\r\n        };\r\n        this._slides = [];\r\n        this._touchMoveInProgress = false;\r\n        this._touchMoveData = {\r\n            initialDirection: null,\r\n            distanceX: 0,\r\n            distanceY: 0,\r\n        };\r\n        this._touchStartData = {\r\n            timeStamp: 0,\r\n            clientX: 0,\r\n            clientY: 0,\r\n        };\r\n        this._transitionSpeedInMillis = 250;\r\n\r\n        this.attachShadow({ mode: 'open' });\r\n\r\n        const styleEl = document.createElement('style');\r\n        styleEl.textContent = style({\r\n            transitionSpeed: this._transitionSpeedInMillis,\r\n        });\r\n\r\n        const slideSelectorsSlot = document.createElement('slot');\r\n        slideSelectorsSlot.name = 'slide-selectors';\r\n\r\n        const slidesSlot = document.createElement('slot');\r\n        slidesSlot.name = 'slides';\r\n\r\n        this.shadowRoot.appendChild(styleEl);\r\n        this.shadowRoot.appendChild(slideSelectorsSlot);\r\n        this.shadowRoot.appendChild(slidesSlot);\r\n\r\n        this._registerEvents();\r\n    }\r\n\r\n    static get observedAttributes(): string[] {\r\n        return [\r\n            'currentslide',\r\n            'loading',\r\n        ];\r\n    }\r\n\r\n    public set currentslide(slideNumber: any) {\r\n        if (this._currentslide == slideNumber) { // non-strict == is intentional\r\n            return;\r\n        }\r\n\r\n        this._currentslide = slideNumber.toString();\r\n        this._syncAttr('currentslide', slideNumber);\r\n\r\n        const slideIndex = parseInt(slideNumber, 10) - 1;\r\n        const requestedSlide = this._slides[slideIndex];\r\n\r\n        if (!requestedSlide || requestedSlide === this._currentSlide) {\r\n            return;\r\n        }\r\n\r\n        this._setCurrentSlide(requestedSlide.index);\r\n        this._slideIntoView(requestedSlide, false);\r\n    }\r\n\r\n    public get currentslide(): any {\r\n        return this._currentslide;\r\n    }\r\n\r\n    public set loading(val: Loading) {\r\n        this._loading = val;\r\n        this._syncAttr('loading', val);\r\n    }\r\n\r\n    public get loading(): Loading {\r\n        return this._loading;\r\n    }\r\n\r\n    private _getMaxNegativeOffsetX(): number {\r\n        const slides = this._slides.slice(0, -1);\r\n\r\n        let maxNegativeOffsetX = 0;\r\n        slides.forEach(slide => maxNegativeOffsetX -= slide.el.offsetWidth);\r\n\r\n        return maxNegativeOffsetX;\r\n    }\r\n\r\n    private _getPlaceholder() {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n\r\n        const placeholder = canvas.toDataURL('image/png');\r\n\r\n        return placeholder;\r\n    }\r\n\r\n    private _getPrecedingSlideWidths(nextSlide: Slide) {\r\n        const precedingSlides = this._slides.filter((slide: Slide) => {\r\n            return slide.index < nextSlide.index;\r\n        });\r\n\r\n        if (!precedingSlides.length) {\r\n            return 0;\r\n        }\r\n\r\n        const precedingSlideWidths = precedingSlides.map((slide: Slide) => {\r\n            // -----------------------------------------------------------------------\r\n            // @NOTE: HTMLElement.offsetWidth returns a floored value\r\n            // whereas HTMLElement.getBoundingRect().width returns a precision float.\r\n            // -----------------------------------------------------------------------\r\n            return Math.ceil(slide.el.getBoundingClientRect().width); // ceil() required since translateX() ignores pixel fractions\r\n        }).reduce((total: number, offsetWidth: number) => {\r\n            return total + offsetWidth;\r\n        });\r\n\r\n        return precedingSlideWidths;\r\n    }\r\n\r\n    private _getRandomRGBA(): string {\r\n        const r = Math.round(Math.random() * 255);\r\n        const g = Math.round(Math.random() * 255);\r\n        const b = Math.round(Math.random() * 255);\r\n        const a = .62;\r\n\r\n        return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n    }\r\n\r\n    private _getSlideSelectorsHeight(): number {\r\n        const slideSelectorsHeight = this._slideSelectors\r\n            ? this._slideSelectors.offsetHeight\r\n            : 0;\r\n\r\n        return slideSelectorsHeight;\r\n    }\r\n\r\n    private _imageIntersectionObserverCallback: IntersectionObserverCallback = (entries: IntersectionObserverEntry[]) => {\r\n        entries.forEach((entry: IntersectionObserverEntry) => {\r\n            if (entry.isIntersecting) {\r\n                const imageToLoad = this._imagesToLoad.find((img) => {\r\n                    return entry.target == img;\r\n                });\r\n\r\n                if (!imageToLoad) {\r\n                    return;\r\n                }\r\n\r\n                const imageLoader = new Image();\r\n\r\n                imageLoader.onload = () => {\r\n                    imageToLoad.src = imageToLoad.dataset.src;\r\n                    this._onImageLoad(imageToLoad);\r\n                };\r\n\r\n                imageLoader.src = imageToLoad.dataset.src;\r\n            }\r\n        });\r\n    }\r\n\r\n    private _isSwipeValid(distanceX: number) {\r\n        const minTravel = 50;\r\n        const isSwipeValid = distanceX.toPositive() > minTravel;\r\n\r\n        return isSwipeValid;\r\n    }\r\n\r\n    private _isTouchMoveRecognised() {\r\n        const totalPixelsTravelled = this._touchMoveData.distanceX.toPositive() + this._touchMoveData.distanceY.toPositive();\r\n\r\n        return totalPixelsTravelled > this._minPixelsMovementRequiredToRegisterMove;\r\n    }\r\n\r\n    private _lazyLoad(img: HTMLImageElement) {\r\n        img.dataset.src = img.src;\r\n        img.src = this._getPlaceholder();\r\n\r\n        this._imageIntersectionObserver.observe(img);\r\n    }\r\n\r\n    private _listenToImages() {\r\n        this._imagesToLoad.forEach((imageToLoad: HTMLImageElement) => {\r\n            const hasImageLoaded = !this._imagesToLoad.find((img: HTMLImageElement) => {\r\n                return imageToLoad === img;\r\n            });\r\n\r\n            if (hasImageLoaded) {\r\n                return;\r\n            }\r\n\r\n            imageToLoad.addEventListener('load', () => {\r\n                this._onImageLoad(imageToLoad);\r\n            });\r\n        });\r\n    }\r\n\r\n    private _onCurrentSlideChange(): void {\r\n        this.dispatchEvent(new CustomEvent('slidechange', {\r\n            detail: {\r\n                currentSlide: this._currentSlide,\r\n            },\r\n        }));\r\n\r\n        this._setActiveSlideSelector();\r\n    }\r\n\r\n    private _onImageLoad(imageToLoad: HTMLImageElement) {\r\n        const imagesToLoadIndex = this._imagesToLoad.findIndex((img: HTMLImageElement) => {\r\n            return imageToLoad === img;\r\n        });\r\n\r\n        this._imagesToLoad.splice(imagesToLoadIndex, 1);\r\n\r\n        this._setCarouselHeightToSlideHeight();\r\n    }\r\n\r\n    private _onResize() {\r\n        this._slideIntoView(this._currentSlide, false);\r\n    }\r\n\r\n    private _onSwipeLeft() {\r\n        const nextSlide = this._slides[this._currentSlide.index + 1];\r\n\r\n        if (!nextSlide) {\r\n            return;\r\n        }\r\n\r\n        this._setCurrentSlide(nextSlide.index);\r\n        this._slideIntoView(nextSlide);\r\n    }\r\n\r\n    private _onSwipeRight() {\r\n        const nextSlide = this._slides[this._currentSlide.index - 1];\r\n\r\n        if (!nextSlide) {\r\n            return;\r\n        }\r\n\r\n        this._setCurrentSlide(nextSlide.index);\r\n        this._slideIntoView(nextSlide);\r\n    }\r\n\r\n    private _onTouchStart(eventDetails: EventDetails) {\r\n        const { clientX, clientY } = eventDetails;\r\n\r\n        if ('PointerEvent' in window) {\r\n            this.addEventListener('pointermove', (e: PointerEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromPointer(e);\r\n                this._onTouchMove(eventDetails);\r\n            });\r\n        } else if ('TouchEvent' in window) {\r\n            this.addEventListener('touchmove', (e: TouchEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromTouch(e);\r\n                this._onTouchMove(eventDetails);\r\n            });\r\n        } else {\r\n            this.addEventListener('mousemove', (e: MouseEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromMouse(e);\r\n                this._onTouchMove(eventDetails);\r\n            });\r\n        }\r\n\r\n        this._pointerEvents.pointerdown.push(eventDetails);\r\n\r\n        this._touchStartData = {\r\n            timeStamp: new Date().getTime(),\r\n            clientX,\r\n            clientY,\r\n        };\r\n\r\n        this._touchMoveData.initialDirection = null;\r\n        this._touchMoveData.distanceX = 0;\r\n        this._touchMoveData.distanceY = 0;\r\n\r\n        this._touchActive = true;\r\n    }\r\n\r\n    private _onTouchMove(eventDetails: EventDetails|any) {\r\n        const { event: e, clientX, clientY } = eventDetails;\r\n\r\n        e.preventDefault();\r\n\r\n        if (!this._touchActive) {\r\n            return;\r\n        }\r\n\r\n        const { initialDirection } = this._touchMoveData;\r\n        this._touchMoveData.distanceX = (this._touchStartData.clientX - clientX);\r\n        this._touchMoveData.distanceY = (this._touchStartData.clientY - clientY);\r\n\r\n        if (!this._isTouchMoveRecognised() && !initialDirection) {\r\n            return;\r\n        }\r\n\r\n        if (!initialDirection) {\r\n            this._setInitialTouchMoveDirection();\r\n        }\r\n\r\n        if (this._touchMoveData.initialDirection === 'vertical') {\r\n            this._setTouchActive(false);\r\n            this._slideIntoView(this._currentSlide);\r\n\r\n            return;\r\n        }\r\n\r\n        this._touchMoveInProgress = true;\r\n\r\n        this._setTouchActive(true);\r\n\r\n        const swipeDistance = clientX - this._touchStartData.clientX;\r\n        const currentX = parseInt((swipeDistance + this._currentOffsetX).toString(), 10);\r\n\r\n        this._slideTo(currentX);\r\n    }\r\n\r\n    private _onTouchCancel(eventDetails: EventDetails) {\r\n        const { event: e } = eventDetails;\r\n\r\n        e.preventDefault();\r\n\r\n        this.removeEventListener('pointermove', this._onTouchMove);\r\n        this.removeEventListener('touchmove', this._onTouchMove);\r\n        this.removeEventListener('mousemove', this._onTouchMove);\r\n\r\n        if (this._touchMoveInProgress) {\r\n            this._setTouchActive(false);\r\n            this._slideIntoView(this._currentSlide);\r\n        }\r\n    }\r\n\r\n    private async _onTouchEnd(eventDetails: EventDetails) {\r\n        const { event: e } = eventDetails;\r\n\r\n        e.preventDefault();\r\n\r\n        this._setTouchActive(false);\r\n\r\n        this.removeEventListener('pointermove', this._onTouchMove);\r\n        this.removeEventListener('touchmove', this._onTouchMove);\r\n        this.removeEventListener('mousemove', this._onTouchMove);\r\n\r\n        const { distanceX } = this._touchMoveData;\r\n\r\n        if (!this._isSwipeValid(distanceX)) {\r\n            this._slideIntoView(this._currentSlide);\r\n\r\n            return;\r\n        }\r\n\r\n        const direction = distanceX < 0 ? 'right' : 'left';\r\n\r\n        if (direction === 'left') {\r\n            this._onSwipeLeft();\r\n        }\r\n\r\n        if (direction === 'right') {\r\n            this._onSwipeRight();\r\n        }\r\n    }\r\n\r\n    private _registerEvents() {\r\n        window.addEventListener('resize', this._onResize.bind(this));\r\n\r\n        if ('PointerEvent' in window) {\r\n            this._registerPointerEvents();\r\n        } else if ('TouchEvent' in window) {\r\n            this._registerTouchEvents();\r\n        } else {\r\n            this._registerMouseEvents();\r\n        }\r\n    }\r\n\r\n    private _registerMouseEvents() {\r\n        this.addEventListener('mousedown', (e: MouseEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromMouse(e);\r\n            this._onTouchStart(eventDetails);\r\n        });\r\n        this.addEventListener('mouseup', (e: MouseEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromMouse(e);\r\n            this._onTouchEnd(eventDetails);\r\n        });\r\n        this.addEventListener('mouseleave', (e: MouseEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromMouse(e);\r\n            this._onTouchCancel(eventDetails);\r\n        });\r\n    }\r\n\r\n    private _registerPointerEvents() {\r\n        this.addEventListener('pointerdown', (e: PointerEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromPointer(e);\r\n            this._onTouchStart(eventDetails);\r\n        });\r\n        this.addEventListener('pointerup', (e: PointerEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromPointer(e);\r\n            this._onTouchEnd(eventDetails);\r\n        });\r\n        this.addEventListener('pointerleave', (e: PointerEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromPointer(e);\r\n            this._onTouchCancel(eventDetails);\r\n        });\r\n    }\r\n\r\n    private _registerTouchEvents() {\r\n        this.addEventListener('touchstart', (e: TouchEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromTouch(e);\r\n            this._onTouchStart(eventDetails);\r\n        });\r\n        this.addEventListener('touchend', (e: TouchEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromTouch(e);\r\n            this._onTouchEnd(eventDetails);\r\n        });\r\n        this.addEventListener('touchcancel', (e: TouchEvent) => {\r\n            const eventDetails = this._pointerEventDetails.fromTouch(e);\r\n            this._onTouchCancel(eventDetails);\r\n        });\r\n    }\r\n\r\n    private _setActiveSlideSelector() {\r\n        if (this._slideSelectors) {\r\n            Array.from(this._slideSelectors.children).forEach((slideSelector: HTMLElement) => {\r\n                slideSelector.classList.remove('--active');\r\n            });\r\n\r\n            const currentSlideSelector = this._slideSelectors.children[this._currentSlide.index] as HTMLElement;\r\n            currentSlideSelector.classList.add('--active');\r\n        }\r\n    }\r\n\r\n    private _setCarouselHeightToSlideHeight() {\r\n        // If the carousel is 100% width and the current slide exceeds the window.innerHeight\r\n        // then the slide widths will each be reduced by a factor of the browser's scrollbar width\r\n        this.style.height = `${this._currentSlide.el.offsetHeight + this._getSlideSelectorsHeight()}px`;\r\n    }\r\n\r\n    private _setContainerStyle(): Promise<any> {\r\n        Array.from(this._container.children).forEach((slide: HTMLElement) => {\r\n            this._setSlideStyle(slide);\r\n        });\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _setCurrentSlide(slideIndex: number) {\r\n        const requestedSlide = this._slides[slideIndex];\r\n\r\n        if (!requestedSlide || requestedSlide === this._currentSlide) {\r\n            return;\r\n        }\r\n\r\n        this._currentSlide = this._slides[slideIndex];\r\n\r\n        this._onCurrentSlideChange();\r\n    }\r\n\r\n    private _setInitialTouchMoveDirection() {\r\n        const { distanceX, distanceY } = this._touchMoveData;\r\n        this._touchMoveData.initialDirection = distanceX.toPositive() < distanceY.toPositive()\r\n            ? 'vertical'\r\n            : 'horizontal';\r\n    }\r\n\r\n    private _setSlideStyle(slide: HTMLElement) {\r\n        const slideStyles = {\r\n            'box-sizing': 'border-box',\r\n            width: '100%',\r\n            overflow: 'hidden',\r\n            'flex-shrink': '0',\r\n        };\r\n        Object.keys(slideStyles).forEach((prop: string) => {\r\n            slide.style[prop] = slideStyles[prop];\r\n        });\r\n\r\n        slide.draggable = false;\r\n        slide.ondragstart = (e: DragEvent) => {\r\n            e.preventDefault();\r\n        };\r\n    }\r\n\r\n    private _setTouchActive(bool: boolean) {\r\n        this._touchActive = bool;\r\n\r\n        switch (bool) {\r\n        case true:\r\n            this.classList.add('--touch-active');\r\n            break;\r\n        case false:\r\n            this._touchMoveInProgress = false;\r\n            this.classList.remove('--touch-active');\r\n            break;\r\n        default: // do nothing\r\n        }\r\n    }\r\n\r\n    private _slideIntoView(slide: Slide, animate = true) {\r\n        const offsetX = this._getPrecedingSlideWidths(slide) * -1;\r\n\r\n        if (!animate) {\r\n            this.classList.add('--no-animate');\r\n        }\r\n\r\n        this._slideTo(offsetX);\r\n        this._currentOffsetX = offsetX;\r\n    }\r\n\r\n    private async _slideTo(offsetX: number) {\r\n        const maxNegativeOffsetX = this._getMaxNegativeOffsetX();\r\n        const translateX = offsetX > this._maxOffsetX\r\n            ? 0\r\n            : offsetX < maxNegativeOffsetX\r\n                ? maxNegativeOffsetX\r\n                : offsetX;\r\n\r\n        this._container.style.transform = `translateX(${translateX}px)`;\r\n\r\n        this._setCarouselHeightToSlideHeight();\r\n\r\n        if (!this._touchActive) {\r\n            await wait(this._transitionSpeedInMillis);\r\n\r\n            this.classList.remove('--no-animate');\r\n        }\r\n    }\r\n\r\n    private _syncAttr(name: string, val: string) {\r\n        this.setAttribute(name, val);\r\n    }\r\n\r\n    public updateCarouselHeight() {\r\n        this._setCarouselHeightToSlideHeight();\r\n    }\r\n\r\n    private _calcMinHeight() {\r\n        if (!this._slideSelectors) {\r\n            return 0;\r\n        }\r\n\r\n        const minSlideHeight = 50;\r\n\r\n        return (this.querySelector('[slot=slides]') as HTMLElement).offsetTop + minSlideHeight;\r\n    }\r\n\r\n    protected async connectedCallback() {\r\n        // Required \"slides\" slot\r\n        await wait(0); // without this timeout, puppeteer tests will fail (with requiredSlotMissingError)\r\n        const requiredSlottedContent = this.querySelector('[slot=slides]');\r\n        if (!requiredSlottedContent || !requiredSlottedContent.children.length) {\r\n            throw Error(requiredSlotMissingError('slides'));\r\n        }\r\n\r\n        this._slides = Array.from(requiredSlottedContent.children)\r\n            .map((slide: HTMLElement, i: number): Slide => {\r\n                return {\r\n                    id: i + 1,\r\n                    index: i,\r\n                    el: slide,\r\n                };\r\n            });\r\n\r\n        // Optional \"slide-selectors\" slot\r\n        const slideSelectorsSlot = this.querySelector('[slot=slide-selectors]');\r\n        if (slideSelectorsSlot) {\r\n            Array.from(this.querySelector('[slot=slide-selectors]').children)\r\n                .map((slideSelectorEl: HTMLElement, i: number) => {\r\n                    slideSelectorEl.addEventListener('pointerup', (e: PointerEvent) => {\r\n                        e.preventDefault();\r\n\r\n                        if (this._touchMoveInProgress) {\r\n                            return;\r\n                        }\r\n\r\n                        this._setCurrentSlide(i);\r\n                        this._setTouchActive(false);\r\n                        this._slideIntoView(this._currentSlide, false);\r\n                    });\r\n                });\r\n\r\n            this._slideSelectors = slideSelectorsSlot as HTMLElement;\r\n        }\r\n\r\n        this.style.minHeight = `${this._calcMinHeight()}px`;\r\n\r\n        this._container = requiredSlottedContent as HTMLElement;\r\n\r\n        const currentslideAttrAsIndex = parseInt(this._currentslide, 10) - 1;\r\n        this._setCurrentSlide(currentslideAttrAsIndex || 0);\r\n\r\n        setTimeout(() => {\r\n            // Timeout neccessary or this._setContainerStyle() will be called\r\n            // before the element has loaded.\r\n            // ---------------------------------------------------------------------------------\r\n            // According to MDN: The connectedCallback lifecycle callback is invoked each time\r\n            // the custom element is appended into a document-connected element. This will\r\n            // happen each time the node is moved, and may happen before the element's contents\r\n            // have been fully parsed.\r\n            // ----------------------------------------------------------------------------------\r\n            this._setContainerStyle();\r\n\r\n            this._slideIntoView(this._currentSlide, false);\r\n\r\n            const images = Array.from(this._container.querySelectorAll('img'));\r\n\r\n            images.forEach((img: HTMLImageElement) => {\r\n                img.style.backgroundColor = this._getRandomRGBA();\r\n\r\n                this._imagesToLoad.push(img);\r\n\r\n                if (this._loading === 'eager') {\r\n                    return;\r\n                }\r\n\r\n                this._lazyLoad(img);\r\n            });\r\n\r\n            if (this._loading === 'eager') {\r\n                this._listenToImages();\r\n            }\r\n\r\n            this.classList.add('--ready');\r\n            this.dispatchEvent(new CustomEvent('load'));\r\n        });\r\n    }\r\n\r\n    protected attributeChangedCallback(name: string, _oldVal: any, newVal: any) {\r\n        if (this[name] === newVal) {\r\n            return;\r\n        }\r\n\r\n        this[name] = newVal;\r\n    }\r\n}\r\n\r\ncustomElements.define(tagName, HTMLZooduckCarouselElement);\r\n","/* ====================================================== */\r\n/* Font Awesome icons used in compliance with the\r\n/* Creative Commons Attribution 4.0 International license */\r\n/* https://fontawesome.com/license */\r\n/* ====================================================== */\r\nexport const fontAwesomeIcons = {\r\n    'fa-eye': '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye\" class=\"svg-inline--fa fa-eye fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\"></path></svg>',\r\n    'fa-eye-slash': '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"eye-slash\" class=\"svg-inline--fa fa-eye-slash fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\"></path></svg>',\r\n    'fa-times': '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"times\" class=\"svg-inline--fa fa-times fa-w-11\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 512\"><path fill=\"currentColor\" d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"></path></svg>',\r\n};\r\n","import { fontAwesomeIcons } from './icons/index';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { EventDetails } from '../utils/index';\r\n\r\nexport const buildCanvas = (height: number): HTMLCanvasElement => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.height = height;\r\n\r\n    return canvas;\r\n};\r\n\r\nexport const buildIconSlot = (slot: string, icon: string): HTMLSlotElement => {\r\n    const iconSlotEl = document.createElement('slot');\r\n    iconSlotEl.name = slot;\r\n    const svgIconTemplateString = fontAwesomeIcons[icon];\r\n    const svgIcon = document.createRange().createContextualFragment(svgIconTemplateString);\r\n    iconSlotEl.appendChild(svgIcon);\r\n\r\n    return iconSlotEl;\r\n};\r\n\r\nexport const buildInput = (): HTMLInputElement => {\r\n    const input = document.createElement('input');\r\n    input.type = 'text';\r\n\r\n    return input;\r\n};\r\n\r\nexport const buildInputLabelContainer = (): HTMLElement => {\r\n    const containerEl = document.createElement('div');\r\n    containerEl.classList.add('input-label-container');\r\n\r\n    return containerEl;\r\n};\r\n\r\nexport const buildLabel = (): HTMLElement => {\r\n    const labelEl = document.createElement('div');\r\n    labelEl.classList.add('label');\r\n\r\n    return labelEl;\r\n};\r\n\r\ninterface EventCoords {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class CanvasEvents {\r\n    private _canDraw = false;\r\n    private _canvas: HTMLCanvasElement;\r\n    private _context: CanvasRenderingContext2D;\r\n    private _domRect: DOMRect;\r\n    private _imageData: string;\r\n    private _lineWidth = 3;\r\n    private _signatureInkColor: string;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this._canvas = canvas;\r\n        this._signatureInkColor = '#222';\r\n    }\r\n\r\n    private _getEventCoords(eventDetails: EventDetails): any {\r\n        const x = eventDetails.clientX - this._domRect.x;\r\n        const y = eventDetails.clientY - this._domRect.y;\r\n\r\n        return {\r\n            x,\r\n            y\r\n        };\r\n    }\r\n\r\n    private _isTouchInCanvas(eventCoords: EventCoords): boolean {\r\n        if (eventCoords.x < 0\r\n            || eventCoords.y < 0\r\n            || eventCoords.x > this._domRect.width\r\n            || eventCoords.y > this._domRect.height) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public onTouchStart(eventDetails: EventDetails) {\r\n        const { event: e } = eventDetails;\r\n\r\n        e.preventDefault();\r\n\r\n        this._canDraw = true;\r\n        this._domRect = this._canvas.getBoundingClientRect() as DOMRect;\r\n\r\n        const eventCoords = this._getEventCoords(eventDetails);\r\n\r\n        this._context = this._canvas.getContext('2d');\r\n        this._context.lineWidth = this._lineWidth;\r\n        this._context.lineCap = 'round';\r\n\r\n        this._context.strokeStyle = this._signatureInkColor;\r\n\r\n        this._context.beginPath();\r\n        this._context.moveTo(eventCoords.x, eventCoords.y);\r\n        this._context.lineTo(eventCoords.x, eventCoords.y);\r\n        this._context.stroke();\r\n    }\r\n\r\n    public onTouchMove(eventDetails: EventDetails) {\r\n        if (this._canDraw) {\r\n            const eventCoords = this._getEventCoords(eventDetails);\r\n\r\n            if (!this._isTouchInCanvas(eventCoords)) {\r\n                this._canDraw = false;\r\n\r\n                return;\r\n            }\r\n\r\n            this._context.lineTo(eventCoords.x, eventCoords.y);\r\n            this._context.stroke();\r\n            this._context.beginPath();\r\n            this._context.moveTo(eventCoords.x, eventCoords.y);\r\n        }\r\n    }\r\n\r\n    public onTouchEnd() {\r\n        if (!this._canDraw) {\r\n            return;\r\n        }\r\n\r\n        this._canDraw = false;\r\n        this._imageData = this._canvas.toDataURL();\r\n    }\r\n\r\n    public get imageData() {\r\n        return this._imageData;\r\n    }\r\n\r\n    public clearImageData() {\r\n        this._imageData = '';\r\n    }\r\n\r\n    public set signatureInkColor(color: string) {\r\n        this._signatureInkColor = color;\r\n    }\r\n}\r\n","export const style = `\r\n/* ============================================================================================= */\r\n/* | CSS VARS                                                                                  | */\r\n/* ============================================================================================= */\r\n/* | Name                                      | Default                                       | */\r\n/* | ----------------------------------------------------------------------------------------- | */\r\n/* | --zooduck-input-font-family               | \"Roboto\", sans-serif                          | */\r\n/* | --zooduck-input-font-size                 | 19px                                          | */\r\n/* | --zooduck-input-font-weight               | inherit                                       | */\r\n/* | --zooduck-input-font-style                | inherit                                       | */\r\n/* | --zooduck-input-width                     | auto                                          | */\r\n/* | --zooduck-input-border-style              | solid                                         | */\r\n/* | --zooduck-input-border-color              | var(--gray)                                   | */\r\n/* | --zooduck-input-border-width              | 1px                                           | */\r\n/* | --zooduck-input-background-color          | var(--white)                                  | */\r\n/* | --zooduck-input-disabled-background-color | var(--disabled)                               | */\r\n/* | --zooduck-input-color                     | var(--black)                                  | */\r\n/* | --zooduck-input-label-color               | var(--gray)                                   | */\r\n/* | --zooduck-input-icon-color                | var(--zooduck-input-label-color, var(--gray)) | */\r\n/* | --zooduck-input-icon-padding              | 0 20px                                        | */\r\n/* | --zooduck-input-signature-border-color    | var(--palegray)                               | */\r\n/* ============================================================================================= */\r\n\r\n:host {\r\n    --gray: #bbb;\r\n    --palegray: #eee;\r\n    --black: #222;\r\n    --white: #fff;\r\n    --disabled: #eee;\r\n\r\n    position: relative;\r\n    display: flex;\r\n    touch-action: none;\r\n    width: var(--zooduck-input-width, auto);\r\n    border-style: var(--zooduck-input-border-style, solid);\r\n    border-color: var(--zooduck-input-border-color, var(--gray));\r\n    border-width: var(--zooduck-input-border-width, 1px);\r\n    background-color: var(--zooduck-input-background-color, var(--white));\r\n    font-family: var(--zooduck-input-font-family, 'Roboto', sans-serif);\r\n    font-size: var(--zooduck-input-font-size, 19px);\r\n    font-weight: var(--zooduck-input-font-weight, inherit);\r\n    font-style: var(--zooduck-input-font-style, inherit);\r\n}\r\n:host([disabled]),\r\n:host([disabled]) input {\r\n    background-color: var(--zooduck-input-disabled-background-color, var(--disabled));\r\n}\r\n.input-label-container {\r\n    display: flex;\r\n    flex-grow: 1;\r\n}\r\n:host([type=signature]) .input-label-container {\r\n    min-width: 200px;\r\n}\r\n.label {\r\n    display: none;\r\n}\r\n:host(.--has-valid-label) .label {\r\n    display: block;\r\n    user-select: none;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    color: var(--zooduck-input-label-color, var(--gray));\r\n    text-align: left;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    width: calc(100% - 10px);\r\n    overflow: hidden;\r\n    left: 10px;\r\n    top: 50%;\r\n    transform-origin: left top;\r\n    transform: translateY(-50%);\r\n    transition: all .25s;\r\n}\r\n:host([required]) .label:after {\r\n    content: \"*\";\r\n}\r\n:host(.--active) .label,\r\n:host(.--has-content) .label,\r\n:host([type=signature]) .label {\r\n    top: 5px;\r\n    transform: translateY(0) scale(.8);\r\n}\r\n:host(.--has-left-icon) .label {\r\n    left: 0;\r\n}\r\ninput {\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    font-family: var(--zooduck-input-font-family, inherit);\r\n    font-size: var(--zooduck-input-font-size, 19px);\r\n    font-weight: var(--zooduck-input-font-weight, inherit);\r\n    font-style: var(--zooduck-input-font-style, inherit);\r\n    background-color: var(--zooduck-input-background-color, var(--white));\r\n    color: var(--zooduck-input-color, var(--black));\r\n}\r\n:host(.--has-left-icon) input {\r\n    padding-left: 0;\r\n}\r\ncanvas {\r\n   display: none;\r\n}\r\n:host([type=signature]) input {\r\n    display: none;\r\n}\r\n:host([type=signature]) canvas {\r\n    display: block;\r\n    margin-top: calc(var(--zooduck-input-font-size, 19px) + 15px);\r\n    border-style: dashed;\r\n    border-color: var(--zooduck-input-signature-border-color, var(--palegray));\r\n    border-width: 6px 6px 0 0;\r\n}\r\n:host(.--has-valid-label) input {\r\n    padding-top: calc(var(--zooduck-input-font-size, 19px) + 5px);\r\n}\r\n::slotted(*),\r\nslot > * {\r\n    padding: var(--zooduck-input-icon-padding, 0 20px);\r\n}\r\nslot[hidden] {\r\n    display: none !important;\r\n}\r\nslot[name*=icon] {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: var(--zooduck-input-font-size, 19px);\r\n    color: var(--zooduck-input-icon-color, var(--zooduck-input-label-color, var(--gray)));\r\n}\r\nslot[name*=icon] svg {\r\n    height: var(--zooduck-input-font-size, 19px);\r\n}\r\nslot[name^=right-icon] {\r\n    cursor: pointer;\r\n    display: none;\r\n}\r\n:host(:not([type=password])) slot[name=right-icon-clear-input] {\r\n    display: flex;\r\n}\r\n:host([type=password]:not(.--show-password)) slot[name=right-icon-show-password] {\r\n    display: flex;\r\n}\r\n:host([type=password].--show-password) slot[name=right-icon-hide-password] {\r\n    display: flex;\r\n}\r\n.--zooduck-input-filter-hidden {\r\n    display: none;\r\n}\r\n`;\r\n","export const globalStyle = `\r\n.--zooduck-input-filter-hidden {\r\n    display: none;\r\n}\r\n`;\r\n","import * as utils from './zooduck-input-utils';\r\nimport { style } from './zooduck-input.style';\r\nimport { globalStyle } from './zooduck-input.global-style';\r\nimport { PointerEventDetails } from '../utils/index';\r\n\r\nclass HTMLZooduckInputElement extends HTMLElement {\r\n    private _autocomplete: string;\r\n    private _autofocus: boolean;\r\n    private _booleanAttrs = [\r\n        'autofocus',\r\n        'disabled',\r\n        'noicons',\r\n        'readonly',\r\n        'required',\r\n    ];\r\n    private _camelCaseProps = {\r\n        noicons: 'noIcons',\r\n        readonly: 'readOnly',\r\n        signatureinkcolor: 'signatureInkColor',\r\n    };\r\n    private _canvas: HTMLCanvasElement;\r\n    private _canvasEvents: utils.CanvasEvents;\r\n    private _canvasHeight = 90;\r\n    private _clearInputIconSlot: HTMLElement;\r\n    private _disabled: boolean;\r\n    private _keyupEnterEvent = 'keyup:enter';\r\n    private _filter: string;\r\n    private _filterEventName = 'zooduck-input:filter';\r\n    private _filterHiddenClass = '--zooduck-input-filter-hidden';\r\n    private _filterMinChars = 2;\r\n    private _filterTagsName = 'zooduck-input-tags';\r\n    private _hidePasswordIconSlot: HTMLElement;\r\n    private _input: HTMLInputElement;\r\n    private _inputLabelContainer: HTMLElement;\r\n    private _label: string;\r\n    private _labelEl: HTMLElement;\r\n    private _leftIconSlot: HTMLSlotElement;\r\n    private _name: string;\r\n    private _noIcons: boolean;\r\n    private _placeholder: string;\r\n    private _pointerEventDetails: PointerEventDetails;\r\n    private _readOnly: boolean;\r\n    private _required: boolean;\r\n    private _sharedAttrs = [\r\n        'autocomplete',\r\n        'autofocus',\r\n        'disabled',\r\n        'name',\r\n        'placeholder',\r\n        'readonly',\r\n        'required',\r\n        'type',\r\n        'value',\r\n    ];\r\n    private _showPasswordIconSlot: HTMLElement;\r\n    private _signatureInkColor = '#222';\r\n    private _supportedTypes = [\r\n        'email',\r\n        'password',\r\n        'tel',\r\n        'text',\r\n        'url'\r\n    ];\r\n    private _customTypes = [\r\n        'filter',\r\n        'signature',\r\n    ];\r\n    private _type: string;\r\n    private _value: string;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._value = '';\r\n        this._label = '';\r\n        this._placeholder = '';\r\n\r\n        const shadow = this.attachShadow({ mode: 'open' });\r\n        const style = document.createElement('style');\r\n        shadow.appendChild(style);\r\n\r\n        this._inputLabelContainer = utils.buildInputLabelContainer();\r\n        this._input = utils.buildInput();\r\n        this._canvas = utils.buildCanvas(this._canvasHeight);\r\n        this._canvasEvents = new utils.CanvasEvents(this._canvas);\r\n        this._labelEl = utils.buildLabel();\r\n        this._leftIconSlot = document.createElement('slot');\r\n        this._leftIconSlot.setAttribute('name', 'left-icon');\r\n        this._clearInputIconSlot = utils.buildIconSlot('right-icon-clear-input', 'fa-times');\r\n        this._showPasswordIconSlot = utils.buildIconSlot('right-icon-show-password', 'fa-eye');\r\n        this._hidePasswordIconSlot = utils.buildIconSlot('right-icon-hide-password', 'fa-eye-slash');\r\n\r\n        this._pointerEventDetails = new PointerEventDetails();\r\n    }\r\n\r\n    protected static get observedAttributes(): string[] {\r\n        return [\r\n            'autocomplete',\r\n            'autofocus',\r\n            'disabled',\r\n            'filter',\r\n            'label',\r\n            'name',\r\n            'noicons',\r\n            'placeholder',\r\n            'readonly',\r\n            'required',\r\n            'signatureinkcolor',\r\n            'type',\r\n            'value',\r\n        ];\r\n    }\r\n\r\n    private _addCanvasEvents() {\r\n        if ('PointerEvent' in window) {\r\n            this._canvas.addEventListener('pointerdown', (e: PointerEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromPointer(e);\r\n                this._canvasEvents.onTouchStart(eventDetails);\r\n            });\r\n            this._canvas.addEventListener('pointermove', (e: PointerEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromPointer(e);\r\n                this._canvasEvents.onTouchMove(eventDetails);\r\n            });\r\n            this._canvas.addEventListener('pointerup', this._canvasOnTouchEnd.bind(this));\r\n            this._canvas.addEventListener('pointerleave', this._canvasOnTouchEnd.bind(this));\r\n        } else if ('TouchEvent' in window) {\r\n            this._canvas.addEventListener('touchstart', (e: TouchEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromTouch(e);\r\n                this._canvasEvents.onTouchStart(eventDetails);\r\n            });\r\n            this._canvas.addEventListener('touchmove', (e: TouchEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromTouch(e);\r\n                this._canvasEvents.onTouchMove(eventDetails);\r\n            });\r\n            this._canvas.addEventListener('touchcancel', this._canvasOnTouchEnd.bind(this));\r\n            this._canvas.addEventListener('touchend', this._canvasOnTouchEnd.bind(this));\r\n        } else {\r\n            this._canvas.addEventListener('mousedown', (e: MouseEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromMouse(e);\r\n                this._canvasEvents.onTouchStart(eventDetails);\r\n            });\r\n            this._canvas.addEventListener('mousemove', (e: MouseEvent) => {\r\n                const eventDetails = this._pointerEventDetails.fromMouse(e);\r\n                this._canvasEvents.onTouchMove(eventDetails);\r\n            });\r\n            this._canvas.addEventListener('mouseup', this._canvasOnTouchEnd.bind(this));\r\n            this._canvas.addEventListener('mouseleave', this._canvasOnTouchEnd.bind(this));\r\n        }\r\n    }\r\n\r\n    private _addEvents(): void {\r\n        window.addEventListener('resize', () => {\r\n            this._updateCanvasWidth();\r\n        });\r\n\r\n        this._addCanvasEvents();\r\n\r\n        this.addEventListener('click', () => {\r\n            this._input.focus();\r\n        });\r\n\r\n        this._input.addEventListener('focus', () => {\r\n            this.classList.add('--active');\r\n\r\n            if (this._placeholder) {\r\n                this._input.setAttribute('placeholder', this._placeholder);\r\n            }\r\n        });\r\n\r\n        this._input.addEventListener('blur', () => {\r\n            this.classList.remove('--active');\r\n\r\n            if (this._placeholder && this._label) {\r\n                this._input.removeAttribute('placeholder');\r\n            }\r\n        });\r\n\r\n        this._input.addEventListener('input', () => {\r\n            this.value = this._input.value;\r\n            this._updateValue();\r\n        });\r\n\r\n        this._input.addEventListener('keyup', (e: KeyboardEvent) => {\r\n            const isEnterKey = (e.code === 'Enter' || e.key === 'Enter' || e.keyCode === 13 || e.which === 13);\r\n            if (isEnterKey) {\r\n                this.dispatchEvent(new CustomEvent(this._keyupEnterEvent, {\r\n                    detail: {\r\n                        value: this._input.value,\r\n                    }\r\n                }));\r\n\r\n                this._input.blur(); // Instruct mobile browsers to remove keyboard interface\r\n            }\r\n        });\r\n\r\n        [\r\n            this._leftIconSlot,\r\n            this._clearInputIconSlot,\r\n            this._showPasswordIconSlot,\r\n            this._hidePasswordIconSlot\r\n        ].forEach((slot) => {\r\n            if ('PointerEvent' in window) {\r\n                slot.addEventListener('pointerdown', (e: PointerEvent) => e.preventDefault());\r\n            } else if ('TouchEvent' in window) {\r\n                slot.addEventListener('touchstart', (e: TouchEvent) => e.preventDefault());\r\n            } else {\r\n                slot.addEventListener('mousedown', (e: MouseEvent) => e.preventDefault());\r\n            }\r\n        });\r\n\r\n        this._clearInputIconSlot.addEventListener('click', () => {\r\n            this.value = '';\r\n\r\n            if (this.type === 'signature') {\r\n                this._clearCanvas();\r\n            } else {\r\n                this._input.focus();\r\n            }\r\n        });\r\n\r\n        this._showPasswordIconSlot.addEventListener('click', () => {\r\n            this._input.type = 'text';\r\n            this._input.focus();\r\n            this.classList.add('--show-password');\r\n        });\r\n\r\n        this._hidePasswordIconSlot.addEventListener('click', () => {\r\n            this._input.type = 'password';\r\n            this._input.focus();\r\n            this.classList.remove('--show-password');\r\n        });\r\n    }\r\n\r\n    private _addFonts() {\r\n        const style = document.createElement('style');\r\n        style.innerText = '@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,400i,700,700i&display=swap\")';\r\n        this.appendChild(style);\r\n    }\r\n\r\n    private _addInputLabelContainer = (): void => {\r\n        this._inputLabelContainer.appendChild(this._input);\r\n        this._inputLabelContainer.appendChild(this._canvas);\r\n        this._inputLabelContainer.appendChild(this._labelEl);\r\n        this.root.appendChild(this._inputLabelContainer);\r\n    }\r\n\r\n    private _addSlots = (): void => {\r\n        this.root.insertBefore(this._leftIconSlot, this._inputLabelContainer);\r\n        this.root.appendChild(this._clearInputIconSlot);\r\n        this.root.appendChild(this._showPasswordIconSlot);\r\n        this.root.appendChild(this._hidePasswordIconSlot);\r\n\r\n        this._setHasLeftIconSlotModifierClass();\r\n    }\r\n\r\n    private _applyFilter = () => {\r\n        if (this._type !== 'filter') {\r\n            return;\r\n        }\r\n\r\n        const sections: HTMLElement[] = Array.from(document.querySelectorAll(`[${this._filterTagsName}]`));\r\n        const allTags: string[] = this._getAllFilterTags(sections);\r\n        const matchingTags: string[] = this._getMatchingTags(allTags);\r\n        const matchingSections: Element[] = this._getMatchingSections(sections, matchingTags);\r\n\r\n        sections.forEach((section: HTMLElement) => {\r\n            if (!matchingSections.includes(section)) {\r\n                section.classList.add(this._filterHiddenClass);\r\n            } else {\r\n                section.classList.remove(this._filterHiddenClass);\r\n            }\r\n        });\r\n\r\n        const filterValid = matchingTags.length != allTags.length;\r\n\r\n        if (filterValid) {\r\n            this.dispatchEvent(new CustomEvent(this._filterEventName, {\r\n                detail: {\r\n                    tags: allTags,\r\n                    matchingTags,\r\n                    matchingElements: matchingSections\r\n                }\r\n            }));\r\n\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    private _canvasOnTouchEnd() {\r\n        this._canvasEvents.onTouchEnd();\r\n        this.value = this._canvasEvents.imageData;\r\n    }\r\n\r\n    private _clearCanvas() {\r\n        const context = this._canvas.getContext('2d');\r\n        context.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n        this._canvasEvents.clearImageData();\r\n    }\r\n\r\n    private _getAllFilterTags(sections: Element[]): string[] {\r\n        let allTags = [];\r\n\r\n        sections.forEach((section: Element) => {\r\n            const tags = section.getAttribute(this._filterTagsName).split(' ')\r\n                .filter((tag: string) => !allTags.includes(tag));\r\n            allTags = allTags.concat(tags);\r\n        });\r\n\r\n        return allTags;\r\n    }\r\n\r\n    private _getMatchingSections(sections: Element[], matchingTags: string[]): Element[] {\r\n        const matchingSections = matchingTags.length ? sections.filter((section: HTMLElement) => {\r\n            const tags = section.getAttribute(this._filterTagsName);\r\n            const matchingTagsPattern = new RegExp(`(${matchingTags.join('|')})`);\r\n\r\n            return tags.search(matchingTagsPattern) !== -1;\r\n        }) : [];\r\n\r\n        return matchingSections;\r\n    }\r\n\r\n    private _getMatchingTags(allTags: string[]): string[] {\r\n        return allTags.filter((tag: string) => {\r\n            const inputValuePattern = new RegExp(`(${this._input.value.split(' ').filter((val) => {\r\n                return val.trim().length >= this._filterMinChars;\r\n            }).join('|')})`);\r\n\r\n            return inputValuePattern.test(tag) || new RegExp(tag).test(this._input.value);\r\n        });\r\n    }\r\n\r\n    private _isBooleanAttr(attr: string): boolean {\r\n        return this._booleanAttrs.includes(attr);\r\n    }\r\n\r\n    private _setHasLeftIconSlotModifierClass() {\r\n        if (!this._leftIconSlot.assignedNodes) {\r\n            return;\r\n        }\r\n\r\n        if (this._leftIconSlot.assignedNodes.length) {\r\n            this.classList.add('--has-left-icon');\r\n        }\r\n    }\r\n\r\n    private _setup() {\r\n        this._addInputLabelContainer();\r\n        this._addSlots();\r\n        this._addEvents();\r\n        this._addFonts();\r\n        this._updateStyle();\r\n        this._updateCanvasWidth();\r\n    }\r\n\r\n    private _syncBooleanAttribute(attr: string, val: boolean): void {\r\n        if (val && !this.hasAttribute(attr)) {\r\n            this.setAttribute(attr, '');\r\n        } else if (!val && this.hasAttribute(attr)) {\r\n            this.removeAttribute(attr);\r\n        }\r\n\r\n        if (val) {\r\n            this._updateRawInput(attr, '');\r\n        } else {\r\n            this._sharedAttrs.includes(attr) && this._input.removeAttribute(attr);\r\n        }\r\n    }\r\n\r\n    private _syncStringAttribute(attr: string, val: any): void {\r\n        if (val === null || val === undefined) {\r\n            /**\r\n             * This is an **intentional deviation** from the default behaviour of attributes / properties.\r\n             * It will **REMOVE** the attribute if you set the property for that attribute to **null**.\r\n             * This is in parallel with the **attributeChangedCallback** lifecycle callback that returns\r\n             * a value of **null** when an attribute is removed.\r\n             *\r\n             * See below for an example of the (ridiculous) default behaviour @17-10-2019.\r\n             *\r\n             * Example\r\n             * ```\r\n             * <input placeholder=\"placeholder\" />\r\n             * <script>\r\n             * const input = document.querySelector('input');\r\n             * input.placeholder = null;\r\n             * </script>\r\n             * ```\r\n             *\r\n             * Result\r\n             * ```\r\n             * <input placeholder=\"null\" />\r\n             * ```\r\n             */\r\n            this.removeAttribute(attr);\r\n            this._sharedAttrs.includes(attr) && this._input.removeAttribute(attr);\r\n\r\n            return;\r\n        }\r\n\r\n        if (typeof val !== 'string') {\r\n            val = JSON.stringify(val);\r\n        }\r\n\r\n        if (!this.hasAttribute(attr) || (this.getAttribute(attr) !== val)) {\r\n            this.setAttribute(attr, val);\r\n        }\r\n\r\n        this._updateRawInput(attr, val);\r\n    }\r\n\r\n    private _updateCanvasWidth() {\r\n        this._canvas.width = 0;\r\n        this._canvas.width = this._inputLabelContainer.offsetWidth;\r\n    }\r\n\r\n    private _updateHasValidLabelClass(): void {\r\n        if (this._label) {\r\n            this.classList.add('--has-valid-label');\r\n        } else {\r\n            this.classList.remove('--has-valid-label');\r\n        }\r\n    }\r\n\r\n    private _updateIconSlotsDisplay(options: any): void {\r\n        [\r\n            this._leftIconSlot,\r\n            this._clearInputIconSlot,\r\n            this._showPasswordIconSlot,\r\n            this._hidePasswordIconSlot\r\n        ].forEach((slot) => {\r\n            slot.hidden = !options.showSlots;\r\n        });\r\n    }\r\n\r\n    private _updateLabel(): void {\r\n        this._syncStringAttribute('label', this._label);\r\n\r\n        if (typeof this._label === 'string') {\r\n            this._labelEl.innerHTML = this._label;\r\n        }\r\n\r\n        if (!this._label && this._placeholder) {\r\n            this._syncStringAttribute('placeholder', this._placeholder);\r\n        }\r\n\r\n        if (this._label && this._placeholder) {\r\n            this._input.removeAttribute('placeholder');\r\n        }\r\n\r\n        this._updateHasValidLabelClass();\r\n    }\r\n\r\n    private _updateNoIcons(): void {\r\n        this._syncBooleanAttribute('noicons', this._noIcons);\r\n\r\n        if (this._noIcons) {\r\n            this._updateIconSlotsDisplay({ showSlots: false });\r\n        } else {\r\n            this._updateIconSlotsDisplay({ showSlots: true });\r\n        }\r\n    }\r\n\r\n    private _updatePlaceholder(): void {\r\n        this._syncStringAttribute('placeholder', this._placeholder);\r\n    }\r\n\r\n    private _updateRawInput(attr: string, val: string) {\r\n        if (attr === 'placeholder' && this._label) {\r\n            return;\r\n        }\r\n\r\n        if (attr === 'type') {\r\n            this._supportedTypes.includes(val)\r\n                ? this._input.setAttribute(attr, val)\r\n                : this._input.removeAttribute(attr);\r\n        } else {\r\n            this._sharedAttrs.includes(attr) && this._input.setAttribute(attr, val);\r\n        }\r\n    }\r\n\r\n    private _updateStyle(): void {\r\n        const styleEl = this.shadowRoot.querySelector('style');\r\n        styleEl.textContent = style;\r\n\r\n        const globalStyleEl = document.createElement('style');\r\n        globalStyleEl.textContent = globalStyle;\r\n        document.head.appendChild(globalStyleEl);\r\n    }\r\n\r\n    private _updateType(): void {\r\n        this._syncStringAttribute('type', this._type);\r\n\r\n        this._value = '';\r\n        this._clearCanvas();\r\n\r\n        this.classList.remove('--show-password');\r\n    }\r\n\r\n    private _updateValue(): void {\r\n        this._syncStringAttribute('value', this._value);\r\n\r\n        if (this._value) {\r\n            this.classList.add('--has-content');\r\n        } else {\r\n            this.classList.remove('--has-content');\r\n        }\r\n\r\n        this._applyFilter();\r\n    }\r\n\r\n    public get autocomplete(): string {\r\n        return this._autocomplete;\r\n    }\r\n\r\n    public set autocomplete(val: string) {\r\n        this._autocomplete = val;\r\n        this._syncStringAttribute('autocomplete', this.autocomplete);\r\n    }\r\n\r\n    public get autofocus(): boolean {\r\n        return this._autofocus;\r\n    }\r\n\r\n    public set autofocus(val: boolean) {\r\n        this._autofocus = val;\r\n        this._syncBooleanAttribute('autofocus', this.autofocus);\r\n    }\r\n\r\n    public get disabled() {\r\n        return this._disabled;\r\n    }\r\n\r\n    public set disabled(val: boolean) {\r\n        this._disabled = val;\r\n        this._syncBooleanAttribute('disabled', this.disabled);\r\n    }\r\n\r\n    public get filter() {\r\n        return this._filter;\r\n    }\r\n\r\n    public set filter(val: string) {\r\n        this._filter = val;\r\n    }\r\n\r\n    public get label(): string {\r\n        return this._label;\r\n    }\r\n\r\n    public set label(val: string | null) {\r\n        this._label = val;\r\n        this._updateLabel();\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public set name(val: string) {\r\n        this._name = val;\r\n        this._syncStringAttribute('name', this.name);\r\n    }\r\n\r\n    public get noIcons(): boolean {\r\n        return this._noIcons;\r\n    }\r\n\r\n    public set noIcons(val: boolean) {\r\n        this._noIcons = val;\r\n        this._updateNoIcons();\r\n    }\r\n\r\n    public get placeholder(): string {\r\n        return this._placeholder;\r\n    }\r\n\r\n    public set placeholder(val: string | null) {\r\n        this._placeholder = val;\r\n        this._updatePlaceholder();\r\n    }\r\n\r\n    public get required(): boolean {\r\n        return this._required;\r\n    }\r\n\r\n    public set required(val: boolean) {\r\n        this._required = val;\r\n        this._syncBooleanAttribute('required', this.required);\r\n    }\r\n\r\n    public get readOnly() {\r\n        return this._readOnly;\r\n    }\r\n\r\n    public set readOnly(val: boolean) {\r\n        this._readOnly = val;\r\n        this._syncBooleanAttribute('readonly', val);\r\n    }\r\n\r\n    private get root(): ShadowRoot | HTMLZooduckInputElement {\r\n        return this.shadowRoot || this;\r\n    }\r\n\r\n    public get signatureInkColor() {\r\n        return this._signatureInkColor;\r\n    }\r\n\r\n    public set signatureInkColor(val: string) {\r\n        this._signatureInkColor = val;\r\n        this._canvasEvents.signatureInkColor = this.signatureInkColor;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    public set type(val: string) {\r\n        let inferredVal = val;\r\n        const allSupportedTypes = this._supportedTypes.concat(this._customTypes);\r\n        if (!allSupportedTypes.includes(val) && val !== null) {\r\n            inferredVal = 'text';\r\n        }\r\n        this._type = inferredVal;\r\n        this._updateType();\r\n    }\r\n\r\n    public get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    public set value(val: string | null) {\r\n        this._value = val;\r\n        this._input.value = val;\r\n        this._updateValue();\r\n    }\r\n\r\n    protected async connectedCallback() {\r\n        if (!this.isConnected) {\r\n            return;\r\n        }\r\n\r\n        this._setup();\r\n    }\r\n\r\n    protected attributeChangedCallback(name: string, _oldVal: string, newVal: string) {\r\n        const prop = this._camelCaseProps[name] || name;\r\n\r\n        if (this[prop] === newVal) {\r\n            return;\r\n        }\r\n\r\n        if (this._isBooleanAttr(name)) {\r\n            this[prop] = this.hasAttribute(name);\r\n        } else {\r\n            this[prop] = newVal;\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define('zooduck-input', HTMLZooduckInputElement);\r\n","const tagName = 'zooduck-radio';\r\n\r\nclass HTMLZooduckRadioElement extends HTMLElement {\r\n    private _hasLoaded = false;\r\n    private _name = '';\r\n    private _rawInput: HTMLInputElement;\r\n    private _size = '24';\r\n    private _value = '';\r\n    private _checked: any;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._buildRawInput();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return [\r\n            'checked',\r\n            'name',\r\n            'size',\r\n            'value',\r\n        ];\r\n    }\r\n\r\n    public set checked(val: any) {\r\n        this._checked = val;\r\n        this._syncBoolAttr('checked', this._checked);\r\n\r\n        if (!this._hasLoaded) {\r\n            return;\r\n        }\r\n\r\n        this._update();\r\n    }\r\n\r\n    public get checked(): any {\r\n        return this._checked;\r\n    }\r\n\r\n    public set name(val: string) {\r\n        this._name = val;\r\n        this._syncStringAttr('name', val);\r\n\r\n        if (!this._hasLoaded) {\r\n            return;\r\n        }\r\n\r\n        this._update();\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public set size(val: string) {\r\n        this._size = val;\r\n        this._syncStringAttr('size', val);\r\n\r\n        if (!this._hasLoaded) {\r\n            return;\r\n        }\r\n\r\n        this._update();\r\n    }\r\n\r\n    public get size(): string {\r\n        return this._size;\r\n    }\r\n\r\n    public set value(val: string) {\r\n        this._value = val;\r\n        this._syncStringAttr('value', val);\r\n\r\n        if (!this._hasLoaded) {\r\n            return;\r\n        }\r\n\r\n        this._update();\r\n    }\r\n\r\n    public get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    private _convertCheckedToBool(checked: string|boolean): boolean {\r\n        return typeof(checked) === 'string'\r\n            ? true\r\n            : checked;\r\n    }\r\n\r\n    private _buildRawInput(): void {\r\n        this._rawInput = new DOMParser().parseFromString(`\r\n            <input type=\"radio\" name=\"${this._name}\" value=\"${this._value}\" />\r\n        `, 'text/html').body.firstChild as HTMLInputElement;\r\n\r\n        this._rawInput.checked = this._checked;\r\n\r\n        if (this._checked) {\r\n            this._rawInput.setAttribute('checked', '');\r\n        }\r\n\r\n        this._rawInput.addEventListener('change', () => {\r\n            this._checked = this._rawInput.checked;\r\n        });\r\n    }\r\n\r\n    private _render(): void {\r\n        this.innerHTML = '';\r\n\r\n        const style = document.createElement('style');\r\n        this.appendChild(style);\r\n\r\n        this._updateStyle();\r\n\r\n        const html = new DOMParser().parseFromString(`\r\n            <label class=\"zooduck-radio\">\r\n                    <i class=\"zooduck-radio__icon --off\"></i>\r\n                    <i class=\"zooduck-radio__icon --on\"></i>\r\n                    <span id=\"zooduckRadioValue\" class=\"zooduck-radio__value\">${this._value}</span>\r\n            </label>\r\n        `, 'text/html').body.firstChild;\r\n\r\n        html.insertBefore(this._rawInput, html.childNodes[0]);\r\n\r\n        this.appendChild(html);\r\n    }\r\n\r\n    private _syncBoolAttr(name: string, val: boolean) {\r\n        if (!val && typeof(val) !== 'string') {\r\n            this.removeAttribute(name);\r\n\r\n            return;\r\n        }\r\n\r\n        this.setAttribute(name, '');\r\n    }\r\n\r\n    private _syncStringAttr(name: string, val: string) {\r\n        this.setAttribute(name, val);\r\n    }\r\n\r\n    private _update() {\r\n        this._updateValue();\r\n        this._updateRawInput();\r\n        this._updateStyle();\r\n    }\r\n\r\n    private _updateRawInput(): void {\r\n        this._rawInput.name = this._name;\r\n        this._rawInput.value = this._value;\r\n        this._rawInput.checked = this._convertCheckedToBool(this._checked);\r\n    }\r\n\r\n    private _updateStyle(): void {\r\n        const style = this.querySelector('style');\r\n        const size = parseInt(this._size, 10);\r\n\r\n        style.textContent = `\r\n            .zooduck-radio {\r\n                display: grid;\r\n                grid-template-columns: auto 1fr;\r\n                align-items: center;\r\n                grid-gap: 5px;\r\n                cursor: pointer;\r\n            }\r\n            .zooduck-radio__value {\r\n                color: #222;\r\n            }\r\n            .zooduck-radio__icon {\r\n                position: relative;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                width: ${size}px;\r\n                height: ${size}px;\r\n                border: solid var(--color, #bbb);\r\n                border-width: calc(${size}px / 8);\r\n                border-radius: 50%;\r\n            }\r\n            .zooduck-radio__icon.--on {\r\n                display: none;\r\n            }\r\n            .zooduck-radio__icon.--on:before {\r\n                display: block;\r\n                content: '';\r\n                position: absolute;\r\n                left: 50%;\r\n                top: 50%;\r\n                transform: translate(-50%, -50%);\r\n                width: 50%;\r\n                height: 50%;\r\n                clip-path: circle();\r\n                background-color: var(--color, #bbb);\r\n            }\r\n            input[type=radio] {\r\n                display: none;\r\n            }\r\n            input:checked ~.zooduck-radio__icon.--on,\r\n            input:not(:checked) ~.zooduck-radio__icon.--off {\r\n                display: flex;\r\n            }\r\n            input:not(:checked) ~.zooduck-radio__icon.--on,\r\n            input:checked ~.zooduck-radio__icon.--off {\r\n                display: none;\r\n            }\r\n        `;\r\n    }\r\n\r\n    private _updateValue() {\r\n        this.querySelector('#zooduckRadioValue').innerHTML = this._value;\r\n    }\r\n\r\n    protected attributeChangedCallback(name: string, _oldVal: string, newVal: string) {\r\n        if (newVal === null || this[name] === newVal) {\r\n            return;\r\n        }\r\n\r\n        this[name] = newVal;\r\n    }\r\n\r\n    protected connectedCallback() {\r\n        this._render();\r\n        this._update();\r\n\r\n        this.dispatchEvent(new CustomEvent('load', {\r\n            detail: {\r\n                name: this._name,\r\n                value: this._value,\r\n                checked: this._checked,\r\n            }\r\n        }));\r\n\r\n        this._hasLoaded = true;\r\n    }\r\n}\r\n\r\ncustomElements.define(tagName, HTMLZooduckRadioElement);\r\n","interface Options {\r\n    blinkDuration: number;\r\n    screenType: string;\r\n}\r\n\r\nexport const style = (options: Options) => {\r\n    const { blinkDuration, screenType } = options;\r\n    let backgroundColorBase: string, colorBase: string, fontFamilyBase: string;\r\n\r\n    switch (screenType) {\r\n    case 'retro':\r\n        backgroundColorBase = '#222';\r\n        colorBase = 'mediumseagreen';\r\n        fontFamilyBase = '\"Courier New\", \"Courier\", monospace';\r\n        break;\r\n    case 'modern':\r\n        backgroundColorBase = '#222';\r\n        colorBase = '#fff';\r\n        fontFamilyBase = '\"Courier New\", \"Courier\", monospace';\r\n        break;\r\n    default:\r\n        backgroundColorBase = '#222';\r\n        colorBase = '#fff';\r\n        fontFamilyBase = '\"Courier New\", \"Courier\", monospace';\r\n    }\r\n\r\n    return `\r\n        /* ============================================================ */\r\n        /* | CSS VARS                                                 | */\r\n        /* ============================================================ */\r\n        /* | Name               | Default                             | */\r\n        /* | -------------------------------------------------------- | */\r\n        /* | --width            | 100%                                | */\r\n        /* | --height           | auto                                | */\r\n        /* | --min-width        | 200px                               | */\r\n        /* | --min-height       | 150px                               | */\r\n        /* | --background-color | #222                                | */\r\n        /* | --font-family      | \"Courier New\", \"Courier\", monospace | */\r\n        /* | --font-weight      | normal                              | */\r\n        /* | --color            | #fff                                | */\r\n        /* | --letter-spacing   | normal                              | */\r\n        /* ===========================================================  */\r\n\r\n        @keyframes blink {\r\n            0% {\r\n                background-color: var(--background-color, ${backgroundColorBase});\r\n                color: var(--background-color, ${backgroundColorBase});\r\n            }\r\n            49% {\r\n                background-color: var(--background-color, ${backgroundColorBase});\r\n                color: var(--background-color, ${backgroundColorBase});\r\n            }\r\n            50% {\r\n                background-color: var(--color, ${colorBase});\r\n                color: var(--color, ${colorBase});\r\n            }\r\n            100% {\r\n                background-color: var(--color, ${colorBase});\r\n                color: var(--color, ${colorBase});\r\n            }\r\n        }\r\n        .--animate-blink {\r\n            animation: blink ${blinkDuration}ms linear infinite;\r\n        }\r\n        @keyframes delayVisible {\r\n            0% {\r\n                width: 0;\r\n                height: 0;\r\n            }\r\n            1% {\r\n                width: auto;\r\n                height: auto;\r\n            }\r\n            100% {\r\n                width: auto;\r\n                height: auto;\r\n            }\r\n        }\r\n        .--animate-delay-visible {\r\n            animation: delayVisible .25ms linear both;\r\n        }\r\n        @keyframes delayVisibleLine {\r\n            0% {\r\n                visbility: hidden;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n            1% {\r\n                visibility: visible;\r\n                position: static;\r\n            }\r\n            99% {\r\n                visibility: visible;\r\n                position: static;\r\n                width: auto;\r\n                height: auto;\r\n            }\r\n            100% {\r\n                visibility: hidden;\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                width: 0;\r\n                height: 0;\r\n            }\r\n        }\r\n        .--animate-delay-visible-line {\r\n            visibility: hidden;\r\n            animation: delayVisibleLine .25ms linear both;\r\n        }\r\n        @keyframes delayVisibleLastLine {\r\n            0% {\r\n                width: 0;\r\n                height: 0;\r\n            }\r\n            1% {\r\n                width: auto;\r\n                height: auto;\r\n            }\r\n            100% {\r\n                width: auto;\r\n                height: auto;\r\n            }\r\n        }\r\n        .--animate-delay-visible-last-line {\r\n            animation: delayVisibleLastLine .25ms linear both;\r\n        }\r\n        :host {\r\n            box-sizing: border-box;\r\n            display: block;\r\n            width: var(--width, 100%);\r\n            height: var(--height, auto);\r\n            min-width: var(--min-width, 200px);\r\n            min-height: var(--min-height, 150px);\r\n            overflow: hidden;\r\n            background-color: var(--background-color, ${backgroundColorBase});\r\n        }\r\n        .lines {\r\n            position: relative;\r\n            padding: 10px;\r\n            background-color: var(--background-color, ${backgroundColorBase});\r\n        }\r\n        .line {\r\n            display: inline-flex;\r\n            flex-wrap: wrap;\r\n            width: auto;\r\n            height: auto;\r\n            overflow: hidden;\r\n            font-family: var(--font-family, ${fontFamilyBase});\r\n            font-size: var(--font-size, inherit);\r\n            font-weight: var(--font-weight, normal);\r\n            letter-spacing: var(--letter-spacing, normal);\r\n            color: var(--color, ${colorBase});\r\n            background-color: var(--background-color, ${backgroundColorBase});\r\n        }\r\n        .line-placeholder {\r\n            display: inline-block;\r\n            color: var(--background-color, ${backgroundColorBase});\r\n            width: 1px;\r\n        }\r\n        .word {\r\n            display: flex;\r\n        }\r\n        .char {\r\n            width: 0;\r\n            overflow: hidden;\r\n        }\r\n        .cursor {\r\n            background-color: var(--color, ${colorBase});\r\n            color: var(--color, ${colorBase});\r\n        }\r\n        .cursor:before {\r\n            content: 'X';\r\n        }\r\n        slot,\r\n        ::slotted(*) {\r\n            display: none;\r\n        }\r\n    `;\r\n};\r\n","import { style } from './zooduck-terminal.style';\r\n\r\nconst tagName = 'zooduck-terminal';\r\n\r\ntype LineMode = 'single'|'multi';\r\ntype ScreenType = 'retro'|'modern';\r\n\r\nclass HTMLZooduckTerminal extends HTMLElement {\r\n    private _content: HTMLElement;\r\n    private _cursorBlinkSpeed: string;\r\n    private _delay: string;\r\n    private _domParser: DOMParser;\r\n    private _fullStopInterval: string;\r\n    private _hasLoaded: boolean;\r\n    private _message: string;\r\n    private _lineMode: LineMode;\r\n    private _onLoadEvent: CustomEvent;\r\n    private _screen: ScreenType;\r\n    private _styleEl: HTMLStyleElement;\r\n    private _typingSpeed: string;\r\n    private _wordBreakInterval: string;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._cursorBlinkSpeed = '1000';\r\n        this._delay = '2000';\r\n        this._domParser = new DOMParser();\r\n        this._fullStopInterval = '1000';\r\n        this._lineMode = 'multi';\r\n        this._screen = 'modern';\r\n        this._typingSpeed = '50';\r\n        this._wordBreakInterval = '0';\r\n\r\n        this.attachShadow({ mode: 'open' });\r\n\r\n        this._styleEl = document.createElement('style');\r\n        this.shadowRoot.appendChild(this._styleEl);\r\n\r\n        this._message = `\r\n            Building software for Internet Explorer is like building a jet engine for a pram.\r\n            It's entirely possible, but completely ridiculous.\r\n        `.trim().replace(/\\s\\s/g, '');\r\n\r\n        this._onLoadEvent = new CustomEvent('load');\r\n    }\r\n\r\n    protected static get observedAttributes() {\r\n        return [\r\n            'cursorblinkspeed',\r\n            'delay',\r\n            'fullstopinterval',\r\n            'linemode',\r\n            'message',\r\n            'screen',\r\n            'typingspeed',\r\n            'wordbreakinterval',\r\n        ];\r\n    }\r\n\r\n    public set cursorblinkspeed(val: string) {\r\n        this._cursorBlinkSpeed = val;\r\n        this._syncAttr('cursorblinkspeed', val);\r\n        this._update();\r\n    }\r\n\r\n    public get cursorblinkspeed(): string {\r\n        return this._cursorBlinkSpeed;\r\n    }\r\n\r\n    public set delay(val: string) {\r\n        this._delay = val;\r\n        this._syncAttr('delay', val);\r\n        this._update();\r\n    }\r\n\r\n    public get delay(): string {\r\n        return this._delay;\r\n    }\r\n\r\n    public set fullstopinterval(val: string) {\r\n        this._fullStopInterval = val;\r\n        this._syncAttr('fullstopinterval', val);\r\n        this._update();\r\n    }\r\n\r\n    public get fullstopinterval(): string {\r\n        return this._fullStopInterval;\r\n    }\r\n\r\n    public set linemode(val: LineMode) {\r\n        this._lineMode = val;\r\n        this._syncAttr('linemode', val);\r\n        this._update();\r\n    }\r\n\r\n    public get linemode(): LineMode {\r\n        return this._lineMode;\r\n    }\r\n\r\n    public set message(val: string) {\r\n        this._message = val;\r\n        this._syncAttr('message', val);\r\n        this._update();\r\n    }\r\n\r\n    public get message(): string {\r\n        return this._message;\r\n    }\r\n\r\n    public set screen(val: ScreenType) {\r\n        this._screen = val;\r\n        this._syncAttr('screen', val);\r\n        this._update();\r\n    }\r\n\r\n    public get screen(): ScreenType {\r\n        return this._screen;\r\n    }\r\n\r\n    public set typingspeed(val: string) {\r\n        this._typingSpeed = val;\r\n        this._syncAttr('typingspeed', val);\r\n        this._update();\r\n    }\r\n\r\n    public get typingspeed(): string {\r\n        return this._typingSpeed;\r\n    }\r\n\r\n    public set wordbreakinterval(val: string) {\r\n        this._wordBreakInterval = val;\r\n        this._syncAttr('wordbreakinterval', val);\r\n        this._update();\r\n    }\r\n\r\n    public get wordbreakinterval(): string {\r\n        return this._wordBreakInterval;\r\n    }\r\n\r\n    private _buildCharacter(char: string, animationDelayInMillis = 0) {\r\n        const style = `animation-delay: ${animationDelayInMillis}ms`;\r\n        const className = 'char --animate-delay-visible';\r\n\r\n        const el = this._domParser.parseFromString(`\r\n            <div\r\n                class=\"${className}\"\r\n                style=\"${style}\">\r\n                <span>${char}</span>\r\n            </div>\r\n        `, 'text/html').body.firstChild as HTMLElement;\r\n\r\n        return el;\r\n    }\r\n\r\n    private _buildCursor() {\r\n        return this._domParser.parseFromString(`\r\n            <div class=\"cursor --animate-blink\"></div>\r\n        `, 'text/html').body.firstChild as HTMLElement;\r\n    }\r\n\r\n    private _buildWord(charEls: HTMLElement[]): HTMLElement {\r\n        const wordEl = this._domParser.parseFromString(`\r\n            <div class=\"word\"></div>\r\n        `, 'text/html').body.firstChild as HTMLElement;\r\n\r\n        charEls.forEach((el) => {\r\n            wordEl.appendChild(el);\r\n        });\r\n\r\n        return wordEl;\r\n    }\r\n\r\n    private _getLines(words: string[]) {\r\n        const lines = [];\r\n        let lineIndex = 0;\r\n\r\n        if (this._lineMode === 'multi') {\r\n            return [words];\r\n        }\r\n\r\n        words.forEach((word) => {\r\n            if (!lines[lineIndex]) {\r\n                lines.push([]);\r\n            }\r\n            lines[lineIndex].push(word);\r\n\r\n            if (this._wordEndsInFullStop(word)) {\r\n                lineIndex += 1;\r\n            }\r\n        });\r\n\r\n        return lines;\r\n    }\r\n\r\n    private _buildLine(words: HTMLElement[]): HTMLElement {\r\n        const line = this._domParser.parseFromString(`\r\n            <section class=\"line\"></section>\r\n        `, 'text/html').body.firstChild as HTMLElement;\r\n\r\n        words.forEach((word) => {\r\n            line.appendChild(word);\r\n        });\r\n\r\n        return line;\r\n    }\r\n\r\n    private _buildLines(): HTMLElement[] {\r\n        let totalDelayInMillis = this._parseMillis(this._delay);\r\n        const wordBreakIntervalInMillis = this._parseMillis(this._wordBreakInterval);\r\n        const fullStopIntervalInMillis = this._parseMillis(this._fullStopInterval);\r\n        const words = this._message.split(' ');\r\n        const lineDelays = [];\r\n        const lines = this._getLines(words);\r\n        const lineEls = lines.map((line: string[], linesArrIndex: number, linesArr: string[]): HTMLElement => {\r\n            const words = line.map((word: string, wordsArrIndex: number, wordsArr: string[]) => {\r\n                const characterEls = word.split('').map((character: string) => {\r\n                    const char = character;\r\n                    const animationDelayInMillis = this._parseMillis(this._typingSpeed) + totalDelayInMillis;\r\n\r\n                    totalDelayInMillis = animationDelayInMillis;\r\n\r\n                    return this._buildCharacter(char, animationDelayInMillis);\r\n                });\r\n\r\n                const currentWord = wordsArr[wordsArrIndex];\r\n\r\n                if (this._wordEndsInFullStop(currentWord)) {\r\n                    totalDelayInMillis += fullStopIntervalInMillis;\r\n                }\r\n\r\n                const isLastWord = wordsArrIndex === (wordsArr.length - 1);\r\n\r\n                if (!isLastWord) {\r\n                    const animationDelayInMillis = this._parseMillis(this._typingSpeed) + wordBreakIntervalInMillis + totalDelayInMillis;\r\n                    const spaceChar = this._buildCharacter('&nbsp;', animationDelayInMillis);\r\n\r\n                    totalDelayInMillis = animationDelayInMillis;\r\n\r\n                    characterEls.push(spaceChar);\r\n                }\r\n\r\n                return this._buildWord(characterEls);\r\n            });\r\n\r\n            const isLastLine = linesArrIndex === (linesArr.length - 1);\r\n\r\n            words.push(this._buildCursor());\r\n\r\n            const section = this._buildLine(words);\r\n\r\n            if (this._lineMode === 'single') {\r\n                const animateDelayModifier = isLastLine\r\n                    ? '--animate-delay-visible-last-line'\r\n                    :  '--animate-delay-visible-line';\r\n                section.classList.add(animateDelayModifier);\r\n            }\r\n\r\n            lineDelays.push(totalDelayInMillis);\r\n\r\n            return section;\r\n        });\r\n\r\n        lineDelays.forEach((lineDelay: number, i: number, lineDelays: number[]) => {\r\n            const currentLinesDelay = lineDelay;\r\n            const previousLinesDelay = lineDelays[i - 1];\r\n            const isFirstLine = (i === 0);\r\n\r\n            if (isFirstLine) {\r\n                const animationDuration = lineDelays[i];\r\n                lineEls[i].style.animationDuration = `${animationDuration}ms`;\r\n\r\n                return;\r\n            }\r\n\r\n            const animationDelay = previousLinesDelay;\r\n            const animationDuration = currentLinesDelay - animationDelay;\r\n            lineEls[i].style.animationDelay =  `${animationDelay}ms`;\r\n            lineEls[i].style.animationDuration = `${animationDuration}ms`;\r\n        });\r\n\r\n        return lineEls;\r\n    }\r\n\r\n    private _parseMillis(stringNumber: string): number {\r\n        return parseInt(stringNumber, 10) || 0;\r\n    }\r\n\r\n    private _render() {\r\n        this._updateStyle();\r\n\r\n        const lines = this._buildLines();\r\n\r\n        const linesEl = this._domParser.parseFromString(`\r\n            <div class=\"lines\"></div>\r\n        `, 'text/html').body.firstChild as HTMLElement;\r\n\r\n        if (this._lineMode === 'single') {\r\n            const linePlaceholder = this._domParser.parseFromString(`\r\n                <div class=\"line-placeholder\">X</div>\r\n            `, 'text/html').body.firstChild;\r\n            linesEl.appendChild(linePlaceholder);\r\n        }\r\n\r\n        lines.forEach((line) => {\r\n            linesEl.appendChild(line);\r\n        });\r\n\r\n        if (!this._hasLoaded) {\r\n            this.shadowRoot.appendChild(linesEl);\r\n        } else {\r\n            this.shadowRoot.replaceChild(linesEl, this._content);\r\n        }\r\n\r\n        this._content = linesEl;\r\n    }\r\n\r\n    private _syncAttr(name: string, val: any) {\r\n        this.setAttribute(name, val);\r\n    }\r\n\r\n    private _updateStyle() {\r\n        this._styleEl.innerHTML = style({\r\n            blinkDuration: this._parseMillis(this._cursorBlinkSpeed),\r\n            screenType: this._screen,\r\n        });\r\n    }\r\n\r\n    private _update() {\r\n        if (!this._hasLoaded) {\r\n            return;\r\n        }\r\n\r\n        this._render();\r\n    }\r\n\r\n    private _wordEndsInFullStop(word: string) {\r\n        return /.+[!?.]/.test(word);\r\n    }\r\n\r\n    protected attributeChangedCallback(name: string, _oldVal: string, newVal: string) {\r\n        if (newVal === null || this[name] === newVal) {\r\n            return;\r\n        }\r\n\r\n        this[name] = newVal;\r\n    }\r\n\r\n    protected connectedCallback() {\r\n        if (!this.isConnected) {\r\n            return;\r\n        }\r\n\r\n        this._render();\r\n\r\n        this.dispatchEvent(this._onLoadEvent);\r\n\r\n        this._hasLoaded = true;\r\n    }\r\n}\r\n\r\ncustomElements.define(tagName, HTMLZooduckTerminal);\r\n","import 'regenerator-runtime/runtime'; // required for async/await to work with babel7+\r\n\r\nimport './zooduck-carousel/zooduck-carousel.component';\r\nimport './zooduck-input/zooduck-input.component.';\r\nimport './zooduck-radio/zooduck-radio.component';\r\nimport './zooduck-terminal/zooduck-terminal.component';\r\n"]}